#include <unordered_set>
#include <vector>
using namespace std;

// TODO: time is not good (178 ms), brute force with dfs and trimming seems
// better
const int NMAX = 300;
unordered_set<int> dp[NMAX][2];

class Solution {
   public:
    int maxWeight(int n, vector<vector<int>>& edges, int k, int t) {
        if (k == 0) return 0;
        int m = edges.size();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 2; j++) {
                dp[i][j].clear();
            }
        }
        int res = -1;
        int kMax = 0;
        for (int i = 0; i < m; i++) {
            if (edges[i][2] >= t) continue;
            dp[edges[i][1]][0].insert(edges[i][2]);
            if (edges[i][2] > res) {
                res = edges[i][2];
            }
            kMax = 1;
        }
        int pre = 0;
        int cur = 1;
        for (int j = 2; j <= k; j++) {
            for (int i = 0; i < m; i++) {
                for (auto e : dp[edges[i][0]][pre]) {
                    int w = e + edges[i][2];
                    if (w >= t) continue;
                    dp[edges[i][1]][cur].insert(w);
                    if (kMax < j || w > res) {
                        res = w;
                    }
                    kMax = j;
                }
            }
            if (kMax != j) {
                break;
            }
            for (int i = 0; i < n; i++) {
                dp[i][pre].clear();
            }
            swap(pre, cur);
        }
        if (kMax == k) {
            return res;
        }
        return -1;
    }
};

// 3
/* int n = 3;
vector<vector<int>> edges = {{0, 1, 1}, {1, 2, 2}};
int k = 2;
int t = 4; */

// -1
/* int n = 19;
vector<vector<int>> edges = {
    {4, 8, 5},   {0, 18, 4},   {8, 14, 1},  {0, 1, 6},    {9, 13, 2},
    {5, 14, 6},  {7, 15, 6},   {7, 16, 5},  {9, 16, 7},   {12, 13, 1},
    {1, 11, 1},  {0, 16, 3},   {10, 16, 4}, {11, 16, 1},  {12, 16, 6},
    {1, 15, 1},  {2, 11, 1},   {11, 18, 4}, {17, 18, 7},  {12, 15, 10},
    {2, 15, 10}, {2, 4, 7},    {4, 18, 10}, {3, 7, 1},    {0, 12, 1},
    {1, 7, 8},   {4, 13, 8},   {4, 15, 5},  {9, 14, 5},   {0, 17, 9},
    {10, 14, 2}, {9, 18, 5},   {6, 18, 3},  {9, 12, 7},   {8, 18, 5},
    {1, 5, 4},   {1, 16, 4},   {3, 14, 9},  {6, 16, 5},   {4, 6, 4},
    {16, 18, 9}, {15, 17, 1},  {4, 11, 3},  {0, 2, 10},   {11, 13, 5},
    {6, 14, 10}, {2, 18, 3},   {12, 14, 8}, {5, 10, 10},  {3, 5, 10},
    {2, 13, 3},  {5, 9, 2},    {10, 18, 3}, {13, 18, 10}, {2, 5, 8},
    {1, 13, 3},  {7, 11, 10},  {2, 3, 10},  {1, 9, 8},    {8, 17, 3},
    {1, 14, 4},  {3, 11, 7},   {3, 15, 7},  {4, 16, 3},   {0, 10, 6},
    {2, 7, 7},   {1, 3, 3},    {7, 18, 2},  {5, 16, 9},   {1, 8, 2},
    {6, 12, 7},  {3, 17, 7},   {0, 4, 1},   {6, 7, 2},    {4, 17, 4},
    {5, 13, 10}, {0, 15, 10},  {10, 11, 5}, {5, 11, 3},   {2, 16, 3},
    {0, 3, 2},   {1, 4, 4},    {8, 11, 1},  {0, 8, 7},    {5, 15, 3},
    {6, 10, 3},  {13, 14, 10}, {8, 15, 1},  {14, 15, 1},  {8, 12, 2},
    {3, 9, 5},   {16, 17, 9},  {11, 14, 3}, {9, 11, 3},   {6, 8, 5},
    {5, 18, 2},  {7, 8, 2},    {10, 13, 4}, {7, 9, 1},    {5, 8, 9},
    {1, 10, 4},  {4, 5, 7},    {3, 4, 8},   {11, 17, 10}, {13, 17, 2},
    {5, 7, 10},  {4, 9, 4},    {14, 18, 8}, {5, 12, 9},   {0, 7, 10},
    {5, 17, 5},  {10, 12, 7},  {1, 2, 2},   {10, 15, 9},  {11, 12, 7},
    {2, 6, 8},   {0, 9, 10},   {0, 13, 1},  {0, 5, 6},    {6, 17, 3},
    {14, 16, 3}, {12, 17, 1},  {10, 17, 8}, {7, 14, 4},   {8, 10, 2},
    {4, 14, 4},  {14, 17, 4},  {8, 16, 6},  {6, 15, 8},   {2, 8, 1},
    {7, 17, 2},  {2, 10, 7},   {6, 9, 10},  {0, 11, 5},   {3, 10, 3},
    {15, 16, 1}, {1, 17, 6},   {3, 8, 5},   {0, 14, 4},   {12, 18, 4}};
int k = 129;
int t = 114; */

int n = 300;
vector<vector<int>> edges = {
    {0, 1, 1},   {0, 2, 1},   {0, 3, 1},   {0, 4, 1},   {0, 5, 1},
    {1, 2, 1},   {1, 3, 1},   {1, 4, 1},   {1, 5, 1},   {1, 6, 1},
    {2, 3, 1},   {2, 4, 1},   {2, 5, 1},   {2, 6, 1},   {2, 7, 1},
    {3, 4, 1},   {3, 5, 1},   {3, 6, 1},   {3, 7, 1},   {3, 8, 1},
    {4, 5, 1},   {4, 6, 1},   {4, 7, 1},   {4, 8, 1},   {4, 9, 1},
    {5, 6, 1},   {5, 7, 1},   {5, 8, 1},   {5, 9, 1},   {5, 10, 1},
    {6, 7, 1},   {6, 8, 1},   {6, 9, 1},   {6, 10, 1},  {6, 11, 1},
    {7, 8, 1},   {7, 9, 1},   {7, 10, 1},  {7, 11, 1},  {7, 12, 1},
    {8, 9, 1},   {8, 10, 1},  {8, 11, 1},  {8, 12, 1},  {8, 13, 1},
    {9, 10, 1},  {9, 11, 1},  {9, 12, 1},  {9, 13, 1},  {9, 14, 1},
    {10, 11, 1}, {10, 12, 1}, {10, 13, 1}, {10, 14, 1}, {10, 15, 1},
    {11, 12, 1}, {11, 13, 1}, {11, 14, 1}, {11, 15, 1}, {11, 16, 1},
    {12, 13, 1}, {12, 14, 1}, {12, 15, 1}, {12, 16, 1}, {12, 17, 1},
    {13, 14, 1}, {13, 15, 1}, {13, 16, 1}, {13, 17, 1}, {13, 18, 1},
    {14, 15, 1}, {14, 16, 1}, {14, 17, 1}, {14, 18, 1}, {14, 19, 1},
    {15, 16, 1}, {15, 17, 1}, {15, 18, 1}, {15, 19, 1}, {15, 20, 1},
    {16, 17, 1}, {16, 18, 1}, {16, 19, 1}, {16, 20, 1}, {16, 21, 1},
    {17, 18, 1}, {17, 19, 1}, {17, 20, 1}, {17, 21, 1}, {17, 22, 1},
    {18, 19, 1}, {18, 20, 1}, {18, 21, 1}, {18, 22, 1}, {18, 23, 1},
    {19, 20, 1}, {19, 21, 1}, {19, 22, 1}, {19, 23, 1}, {19, 24, 1},
    {20, 21, 1}, {20, 22, 1}, {20, 23, 1}, {20, 24, 1}, {20, 25, 1},
    {21, 22, 1}, {21, 23, 1}, {21, 24, 1}, {21, 25, 1}, {21, 26, 1},
    {22, 23, 1}, {22, 24, 1}, {22, 25, 1}, {22, 26, 1}, {22, 27, 1},
    {23, 24, 1}, {23, 25, 1}, {23, 26, 1}, {23, 27, 1}, {23, 28, 1},
    {24, 25, 1}, {24, 26, 1}, {24, 27, 1}, {24, 28, 1}, {24, 29, 1},
    {25, 26, 1}, {25, 27, 1}, {25, 28, 1}, {25, 29, 1}, {25, 30, 1},
    {26, 27, 1}, {26, 28, 1}, {26, 29, 1}, {26, 30, 1}, {26, 31, 1},
    {27, 28, 1}, {27, 29, 1}, {27, 30, 1}, {27, 31, 1}, {27, 32, 1},
    {28, 29, 1}, {28, 30, 1}, {28, 31, 1}, {28, 32, 1}, {28, 33, 1},
    {29, 30, 1}, {29, 31, 1}, {29, 32, 1}, {29, 33, 1}, {29, 34, 1},
    {30, 31, 1}, {30, 32, 1}, {30, 33, 1}, {30, 34, 1}, {30, 35, 1},
    {31, 32, 1}, {31, 33, 1}, {31, 34, 1}, {31, 35, 1}, {31, 36, 1},
    {32, 33, 1}, {32, 34, 1}, {32, 35, 1}, {32, 36, 1}, {32, 37, 1},
    {33, 34, 1}, {33, 35, 1}, {33, 36, 1}, {33, 37, 1}, {33, 38, 1},
    {34, 35, 1}, {34, 36, 1}, {34, 37, 1}, {34, 38, 1}, {34, 39, 1},
    {35, 36, 1}, {35, 37, 1}, {35, 38, 1}, {35, 39, 1}, {35, 40, 1},
    {36, 37, 1}, {36, 38, 1}, {36, 39, 1}, {36, 40, 1}, {36, 41, 1},
    {37, 38, 1}, {37, 39, 1}, {37, 40, 1}, {37, 41, 1}, {37, 42, 1},
    {38, 39, 1}, {38, 40, 1}, {38, 41, 1}, {38, 42, 1}, {38, 43, 1},
    {39, 40, 1}, {39, 41, 1}, {39, 42, 1}, {39, 43, 1}, {39, 44, 1},
    {40, 41, 1}, {40, 42, 1}, {40, 43, 1}, {40, 44, 1}, {40, 45, 1},
    {41, 42, 1}, {41, 43, 1}, {41, 44, 1}, {41, 45, 1}, {41, 46, 1},
    {42, 43, 1}, {42, 44, 1}, {42, 45, 1}, {42, 46, 1}, {42, 47, 1},
    {43, 44, 1}, {43, 45, 1}, {43, 46, 1}, {43, 47, 1}, {43, 48, 1},
    {44, 45, 1}, {44, 46, 1}, {44, 47, 1}, {44, 48, 1}, {44, 49, 1},
    {45, 46, 1}, {45, 47, 1}, {45, 48, 1}, {45, 49, 1}, {45, 50, 1},
    {46, 47, 1}, {46, 48, 1}, {46, 49, 1}, {46, 50, 1}, {46, 51, 1},
    {47, 48, 1}, {47, 49, 1}, {47, 50, 1}, {47, 51, 1}, {47, 52, 1},
    {48, 49, 1}, {48, 50, 1}, {48, 51, 1}, {48, 52, 1}, {48, 53, 1},
    {49, 50, 1}, {49, 51, 1}, {49, 52, 1}, {49, 53, 1}, {49, 54, 1},
    {50, 51, 1}, {50, 52, 1}, {50, 53, 1}, {50, 54, 1}, {50, 55, 1},
    {51, 52, 1}, {51, 53, 1}, {51, 54, 1}, {51, 55, 1}, {51, 56, 1},
    {52, 53, 1}, {52, 54, 1}, {52, 55, 1}, {52, 56, 1}, {52, 57, 1},
    {53, 54, 1}, {53, 55, 1}, {53, 56, 1}, {53, 57, 1}, {53, 58, 1},
    {54, 55, 1}, {54, 56, 1}, {54, 57, 1}, {54, 58, 1}, {54, 59, 1},
    {55, 56, 1}, {55, 57, 1}, {55, 58, 1}, {55, 59, 1}, {55, 60, 1},
    {56, 57, 1}, {56, 58, 1}, {56, 59, 1}, {56, 60, 1}, {56, 61, 1},
    {57, 58, 1}, {57, 59, 1}, {57, 60, 1}, {57, 61, 1}, {57, 62, 1},
    {58, 59, 1}, {58, 60, 1}, {58, 61, 1}, {58, 62, 1}, {58, 63, 1},
    {59, 60, 1}, {59, 61, 1}, {59, 62, 1}, {59, 63, 1}, {59, 64, 1}};
int k = 10;
int t = 11;

int main() {
    Solution sol;
    int ans = sol.maxWeight(n, edges, k, t);
    printf("ans = %d\n", ans);
    return 0;
}